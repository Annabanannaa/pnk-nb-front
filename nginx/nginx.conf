user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log crit;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log off;

    client_max_body_size 1024M;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 8k;

    gzip off;
    server_tokens off;
    sendfile        on;
    keepalive_timeout  65;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        root /app/dist;
        listen 8080;
        server_name _;

        charset utf-8;

        location / {
            try_files $uri @frontendStatic @frontend;
        }

        location /_nuxt/hmr {
            proxy_pass                      http://frontend:3000;
            proxy_set_header Upgrade        $http_upgrade;
            proxy_set_header Connection     "upgrade";
            proxy_set_header Host           $host;
            proxy_cache_bypass              $http_upgrade;
        }

        location @frontendStatic {
            expires max;
            root /app/dist;
        }

        location @frontend {
            proxy_pass http://frontend:3000;
            proxy_redirect                      off;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_read_timeout          1m;
            proxy_connect_timeout       1m;
        }
    }
}